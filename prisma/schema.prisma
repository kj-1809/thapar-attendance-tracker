generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id
  email        String?
  currentGroup String?
  name         String?
  attendances  Attendance[]
  takenClasses TakenClass[]

  @@map("user")
}

model TakenClass {
  id          String       @id @default(cuid())
  name        String
  present     Int          @default(0)
  absent      Int          @default(0)
  userId      String
  attendances Attendance[]
  User        User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "taken_class_userId_fkey")
  @@map("taken_class")
}

model Attendance {
  id           String         @id @default(cuid())
  type         AttendanceType
  date         DateTime
  slot         Int
  userId       String
  takenClassId String
  TakenClass   TakenClass     @relation(fields: [takenClassId], references: [id])
  User         User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([takenClassId], map: "attendance_takenClassId_fkey")
  @@index([userId], map: "attendance_userId_fkey")
  @@map("attendance")
}

model class_group {
  name             String             @id @db.VarChar(50)
  detail_class     detail_class[]
  group_to_courses group_to_courses[]
}

model course {
  name             String             @id @db.VarChar(100)
  detail_class     detail_class[]
  group_to_courses group_to_courses[]
}

model detail_class {
  id          Int          @id @default(autoincrement())
  course_name String?      @db.VarChar(100)
  location    String?      @db.VarChar(100)
  professor   String?      @db.VarChar(100)
  type        String?      @db.VarChar(1)
  group_name  String?      @db.VarChar(50)
  slot        Int?
  day         String?      @db.VarChar(50)
  course      course?      @relation(fields: [course_name], references: [name], map: "detail_class_ibfk_1")
  class_group class_group? @relation(fields: [group_name], references: [name], map: "detail_class_ibfk_2")

  @@index([course_name], map: "detail_class_ibfk_1")
  @@index([group_name], map: "detail_class_ibfk_2")
}

model group_to_courses {
  group_name  String      @db.VarChar(50)
  course_name String      @db.VarChar(50)
  class_group class_group @relation(fields: [group_name], references: [name], map: "group_to_courses_ibfk_1")
  course      course      @relation(fields: [course_name], references: [name], map: "group_to_courses_ibfk_2")

  @@id([group_name, course_name])
  @@index([course_name], map: "group_to_courses_ibfk_2")
}

enum AttendanceType {
  PRESENT
  ABSENT
}
